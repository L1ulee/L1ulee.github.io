<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      
        <title>IDA9.0 破解</title>
      
      <link href="/2024/08/18/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/IDA9.0%20%E7%A0%B4%E8%A7%A3/"/>
      <url>/2024/08/18/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/IDA9.0%20%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="IDA9-0-破解"><a href="#IDA9-0-破解" class="headerlink" title="IDA9.0 破解"></a><strong>IDA9.0 破解</strong></h1><div class="note orange icon-padding simple"><i class="note-icon fas fa-bell"></i><p> 来源：</p><p><a href="https://bbs.kanxue.com/thread-277984.htm">看雪论坛｜IDA 版本历代记</a></p><p>下载链接: <a href="https://od.cloudsploit.top/zh-CN/tools/DAI/">下载链接</a></p><p>Python代码版本的lic生成脚本</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># originally made by alula</span></span><br><span class="line">license = &#123;</span><br><span class="line">    <span class="string">&quot;header&quot;</span>: &#123;<span class="string">&quot;version&quot;</span>: <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="string">&quot;payload&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elf&quot;</span>,</span><br><span class="line">        <span class="string">&quot;email&quot;</span>: <span class="string">&quot;elv@ven&quot;</span>,</span><br><span class="line">        <span class="string">&quot;licenses&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;description&quot;</span>: <span class="string">&quot;license&quot;</span>,</span><br><span class="line">                <span class="string">&quot;edition_id&quot;</span>: <span class="string">&quot;ida-pro&quot;</span>,</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: <span class="string">&quot;48-2137-ACAB-99&quot;</span>,</span><br><span class="line">                <span class="string">&quot;license_type&quot;</span>: <span class="string">&quot;named&quot;</span>,</span><br><span class="line">                <span class="string">&quot;product&quot;</span>: <span class="string">&quot;IDA&quot;</span>,</span><br><span class="line">                <span class="string">&quot;seats&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="string">&quot;start_date&quot;</span>: <span class="string">&quot;2024-08-10 00:00:00&quot;</span>,</span><br><span class="line">                <span class="string">&quot;end_date&quot;</span>: <span class="string">&quot;2033-12-31 23:59:59&quot;</span>,  <span class="comment"># This can&#x27;t be more than 10 years!</span></span><br><span class="line">                <span class="string">&quot;issued_on&quot;</span>: <span class="string">&quot;2024-08-10 00:00:00&quot;</span>,</span><br><span class="line">                <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="string">&quot;product_id&quot;</span>: <span class="string">&quot;IDAPRO&quot;</span>,</span><br><span class="line">                <span class="string">&quot;add_ons&quot;</span>: [</span><br><span class="line">                    <span class="comment"># &#123;</span></span><br><span class="line">                    <span class="comment">#     &quot;id&quot;: &quot;48-1337-DEAD-01&quot;,</span></span><br><span class="line">                    <span class="comment">#     &quot;code&quot;: &quot;HEXX86L&quot;,</span></span><br><span class="line">                    <span class="comment">#     &quot;owner&quot;: &quot;48-0000-0000-00&quot;,</span></span><br><span class="line">                    <span class="comment">#     &quot;start_date&quot;: &quot;2024-08-10 00:00:00&quot;,</span></span><br><span class="line">                    <span class="comment">#     &quot;end_date&quot;: &quot;2033-12-31 23:59:59&quot;,</span></span><br><span class="line">                    <span class="comment"># &#125;,</span></span><br><span class="line">                    <span class="comment"># &#123;</span></span><br><span class="line">                    <span class="comment">#     &quot;id&quot;: &quot;48-1337-DEAD-02&quot;,</span></span><br><span class="line">                    <span class="comment">#     &quot;code&quot;: &quot;HEXX64L&quot;,</span></span><br><span class="line">                    <span class="comment">#     &quot;owner&quot;: &quot;48-0000-0000-00&quot;,</span></span><br><span class="line">                    <span class="comment">#     &quot;start_date&quot;: &quot;2024-08-10 00:00:00&quot;,</span></span><br><span class="line">                    <span class="comment">#     &quot;end_date&quot;: &quot;2033-12-31 23:59:59&quot;,</span></span><br><span class="line">                    <span class="comment"># &#125;,</span></span><br><span class="line">                ],</span><br><span class="line">                <span class="string">&quot;features&quot;</span>: [],</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_every_addon</span>(<span class="params">license</span>):</span><br><span class="line">    platforms = [</span><br><span class="line">        <span class="string">&quot;W&quot;</span>,  <span class="comment"># Windows</span></span><br><span class="line">        <span class="string">&quot;L&quot;</span>,  <span class="comment"># Linux</span></span><br><span class="line">        <span class="string">&quot;M&quot;</span>,  <span class="comment"># macOS</span></span><br><span class="line">    ]</span><br><span class="line">    addons = [</span><br><span class="line">        <span class="string">&quot;HEXX86&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXX64&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXARM&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXARM64&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXMIPS&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXMIPS64&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXPPC&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXPPC64&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXRV64&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXARC&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HEXARC64&quot;</span>,</span><br><span class="line">        <span class="comment"># Probably cloud?</span></span><br><span class="line">        <span class="comment"># &quot;HEXCX86&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCX64&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCARM&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCARM64&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCMIPS&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCMIPS64&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCPPC&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCPPC64&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCRV&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCRV64&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCARC&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;HEXCARC64&quot;,</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> addon <span class="keyword">in</span> addons:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        license[<span class="string">&quot;payload&quot;</span>][<span class="string">&quot;licenses&quot;</span>][<span class="number">0</span>][<span class="string">&quot;add_ons&quot;</span>].append(</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: <span class="string">f&quot;48-1337-DEAD-<span class="subst">&#123;i:02&#125;</span>&quot;</span>,</span><br><span class="line">                <span class="string">&quot;code&quot;</span>: addon,</span><br><span class="line">                <span class="string">&quot;owner&quot;</span>: license[<span class="string">&quot;payload&quot;</span>][<span class="string">&quot;licenses&quot;</span>][<span class="number">0</span>][<span class="string">&quot;id&quot;</span>],</span><br><span class="line">                <span class="string">&quot;start_date&quot;</span>: <span class="string">&quot;2024-08-10 00:00:00&quot;</span>,</span><br><span class="line">                <span class="string">&quot;end_date&quot;</span>: <span class="string">&quot;2033-12-31 23:59:59&quot;</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    <span class="comment"># for addon in addons:</span></span><br><span class="line">    <span class="comment">#     for platform in platforms:</span></span><br><span class="line">    <span class="comment">#         i += 1</span></span><br><span class="line">    <span class="comment">#         license[&quot;payload&quot;][&quot;licenses&quot;][0][&quot;add_ons&quot;].append(</span></span><br><span class="line">    <span class="comment">#             &#123;</span></span><br><span class="line">    <span class="comment">#                 &quot;id&quot;: f&quot;48-1337-DEAD-&#123;i:02&#125;&quot;,</span></span><br><span class="line">    <span class="comment">#                 &quot;code&quot;: addon + platform,</span></span><br><span class="line">    <span class="comment">#                 &quot;owner&quot;: license[&quot;payload&quot;][&quot;licenses&quot;][0][&quot;id&quot;],</span></span><br><span class="line">    <span class="comment">#                 &quot;start_date&quot;: &quot;2024-08-10 00:00:00&quot;,</span></span><br><span class="line">    <span class="comment">#                 &quot;end_date&quot;: &quot;2033-12-31 23:59:59&quot;,</span></span><br><span class="line">    <span class="comment">#             &#125;</span></span><br><span class="line">    <span class="comment">#         )</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add_every_addon(license)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">json_stringify_alphabetical</span>(<span class="params">obj</span>):</span><br><span class="line">    <span class="keyword">return</span> json.dumps(obj, sort_keys=<span class="literal">True</span>, separators=(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;:&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">buf_to_bigint</span>(<span class="params">buf</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>.from_bytes(buf, byteorder=<span class="string">&quot;little&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bigint_to_buf</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="keyword">return</span> i.to_bytes((i.bit_length() + <span class="number">7</span>) // <span class="number">8</span>, byteorder=<span class="string">&quot;little&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Yup, you only have to patch 5c -&gt; cb in libida64.so</span></span><br><span class="line">pub_modulus_hexrays = buf_to_bigint(</span><br><span class="line">    <span class="built_in">bytes</span>.fromhex(</span><br><span class="line">        <span class="string">&quot;edfd425cf978546e8911225884436c57140525650bcf6ebfe80edbc5fb1de68f4c66c29cb22eb668788afcb0abbb718044584b810f8970cddf227385f75d5dddd91d4f18937a08aa83b28c49d12dc92e7505bb38809e91bd0fbd2f2e6ab1d2e33c0c55d5bddd478ee8bf845fcef3c82b9d2929ecb71f4d1b3db96e3a8e7aaf93&quot;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line">pub_modulus_patched = buf_to_bigint(</span><br><span class="line">    <span class="built_in">bytes</span>.fromhex(</span><br><span class="line">        <span class="string">&quot;edfd42cbf978546e8911225884436c57140525650bcf6ebfe80edbc5fb1de68f4c66c29cb22eb668788afcb0abbb718044584b810f8970cddf227385f75d5dddd91d4f18937a08aa83b28c49d12dc92e7505bb38809e91bd0fbd2f2e6ab1d2e33c0c55d5bddd478ee8bf845fcef3c82b9d2929ecb71f4d1b3db96e3a8e7aaf93&quot;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">private_key = buf_to_bigint(</span><br><span class="line">    <span class="built_in">bytes</span>.fromhex(</span><br><span class="line">        <span class="string">&quot;77c86abbb7f3bb134436797b68ff47beb1a5457816608dbfb72641814dd464dd640d711d5732d3017a1c4e63d835822f00a4eab619a2c4791cf33f9f57f9c2ae4d9eed9981e79ac9b8f8a411f68f25b9f0c05d04d11e22a3a0d8d4672b56a61f1532282ff4e4e74759e832b70e98b9d102d07e9fb9ba8d15810b144970029874&quot;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">message</span>):</span><br><span class="line">    decrypted = <span class="built_in">pow</span>(buf_to_bigint(message), exponent, pub_modulus_patched)</span><br><span class="line">    decrypted = bigint_to_buf(decrypted)</span><br><span class="line">    <span class="keyword">return</span> decrypted[::-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">message</span>):</span><br><span class="line">    encrypted = <span class="built_in">pow</span>(buf_to_bigint(message[::-<span class="number">1</span>]), private_key, pub_modulus_patched)</span><br><span class="line">    encrypted = bigint_to_buf(encrypted)</span><br><span class="line">    <span class="keyword">return</span> encrypted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exponent = <span class="number">0x13</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sign_hexlic</span>(<span class="params">payload: <span class="built_in">dict</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    data = &#123;<span class="string">&quot;payload&quot;</span>: payload&#125;</span><br><span class="line">    data_str = json_stringify_alphabetical(data)</span><br><span class="line"></span><br><span class="line">    buffer = <span class="built_in">bytearray</span>(<span class="number">128</span>)</span><br><span class="line">    <span class="comment"># first 33 bytes are random</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>):</span><br><span class="line">        buffer[i] = <span class="number">0x42</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># compute sha256 of the data</span></span><br><span class="line">    sha256 = hashlib.sha256()</span><br><span class="line">    sha256.update(data_str.encode())</span><br><span class="line">    digest = sha256.digest()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># copy the sha256 digest to the buffer</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        buffer[<span class="number">33</span> + i] = digest[i]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># encrypt the buffer</span></span><br><span class="line">    encrypted = encrypt(buffer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> encrypted.<span class="built_in">hex</span>().upper()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_patched_dll</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Didn&#x27;t find <span class="subst">&#123;filename&#125;</span>, skipping patch generation&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> data.find(<span class="built_in">bytes</span>.fromhex(<span class="string">&quot;EDFD42CBF978&quot;</span>)) != -<span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;filename&#125;</span> looks to be already patched :)&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span> data.find(<span class="built_in">bytes</span>.fromhex(<span class="string">&quot;EDFD425CF978&quot;</span>)) == -<span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;filename&#125;</span> doesn&#x27;t contain the original modulus.&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        data = data.replace(</span><br><span class="line">            <span class="built_in">bytes</span>.fromhex(<span class="string">&quot;EDFD425CF978&quot;</span>), <span class="built_in">bytes</span>.fromhex(<span class="string">&quot;EDFD42CBF978&quot;</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        patched_filename = <span class="string">f&quot;<span class="subst">&#123;filename&#125;</span>.patched&quot;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(patched_filename, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(data)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Generated modulus patch to <span class="subst">&#123;patched_filename&#125;</span>! To apply the patch, replace the original file with the patched file&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># message = bytes.fromhex(license[&quot;signature&quot;])</span></span><br><span class="line"><span class="comment"># print(decrypt(message).hex())</span></span><br><span class="line"><span class="comment"># print(encrypt(decrypt(message)).hex())</span></span><br><span class="line"></span><br><span class="line">license[<span class="string">&quot;signature&quot;</span>] = sign_hexlic(license[<span class="string">&quot;payload&quot;</span>])</span><br><span class="line"></span><br><span class="line">serialized = json_stringify_alphabetical(license)</span><br><span class="line"></span><br><span class="line"><span class="comment"># write to ida.hexlic</span></span><br><span class="line">filename = <span class="string">&quot;idapro.hexlic&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(serialized)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Saved new license to <span class="subst">&#123;filename&#125;</span>!&quot;</span>)</span><br><span class="line"></span><br><span class="line">generate_patched_dll(<span class="string">&quot;ida32.dll&quot;</span>)</span><br><span class="line">generate_patched_dll(<span class="string">&quot;ida.dll&quot;</span>)</span><br><span class="line">generate_patched_dll(<span class="string">&quot;libida32.so&quot;</span>)</span><br><span class="line">generate_patched_dll(<span class="string">&quot;libida.so&quot;</span>)</span><br><span class="line">generate_patched_dll(<span class="string">&quot;libida32.dylib&quot;</span>)</span><br><span class="line">generate_patched_dll(<span class="string">&quot;libida.dylib&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向破解 </tag>
            
            <tag> 资源分享 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
